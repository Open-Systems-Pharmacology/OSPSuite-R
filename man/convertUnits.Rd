% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-data-combined.R
\name{convertUnits}
\alias{convertUnits}
\title{Convert datasets in \code{DataCombined} to common units}
\usage{
convertUnits(dataCombined, xUnit = NULL, yUnit = NULL)
}
\arguments{
\item{dataCombined}{A single instance of \code{DataCombined} class.}

\item{xUnit, yUnit}{Target units for \code{xValues} and \code{yValues}, respectively. If
not specified (\code{NULL}), first of the existing units in the respective
columns (\code{xUnit} and \code{yUnit}) will be selected as the common unit. For
available dimensions and units, see \code{ospsuite::ospDimensions} and
\code{ospsuite::ospUnits}, respectively.}
}
\value{
A data frame with measurement columns transformed to have common units.

In the returned tibble data frame, the following columns will always be present:

name - group - dataType - xValues - xDimension - xUnit - yValues -
yErrorValues - yDimension - yUnit - yErrorType - yErrorUnit - molWeight

Importantly, the \code{xUnit} and \code{yUnit} columns will have unique entries.
}
\description{
When multiple (observed and/or simulated) datasets are present in a data
frame, they are likely to have different units. This function helps to
convert them to a common unit specified by the user.

This is especially helpful while plotting since the quantities from different
datasets to be plotted on the X-and Y-axis need to have same units to be
meaningfully compared.
}
\note{
Molecular weight is \strong{required} for the conversion between certain
dimensions (\code{Amount}, \code{Mass}, \code{Concentration (molar)}, and \code{Concentration (mass)}). Therefore, if molecular weight is missing for these dimension, the
unit conversion will fail.
}
\examples{
# simulated data
simFilePath <- system.file("extdata", "Aciclovir.pkml", package = "ospsuite")
sim <- loadSimulation(simFilePath)
simResults <- runSimulation(sim)
outputPath <- "Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)"

# observed data
obsData <- lapply(
  c("ObsDataAciclovir_1.pkml", "ObsDataAciclovir_2.pkml", "ObsDataAciclovir_3.pkml"),
  function(x) loadDataSetFromPKML(system.file("extdata", x, package = "ospsuite"))
)
names(obsData) <- lapply(obsData, function(x) x$name)


# Create a new instance of `DataCombined` class
myDataCombined <- DataCombined$new()

# Add simulated results
myDataCombined$addSimulationResults(
  simulationResults = simResults,
  quantitiesOrPaths = outputPath,
  groups = "Aciclovir PVB"
)

# Add observed data set
myDataCombined$addDataSets(obsData$`Vergin 1995.Iv`, groups = "Aciclovir PVB")

convertUnits(
  myDataCombined,
  xUnit = ospUnits$Time$s,
  yUnit = ospUnits$`Concentration [mass]`$`Âµg/l`
)

}
\seealso{
Other data-combined: 
\code{\link{DataCombined}},
\code{\link{calculateResiduals}()}
}
\concept{data-combined}
