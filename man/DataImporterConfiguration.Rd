% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-importer-configuration.R
\docType{class}
\name{DataImporterConfiguration}
\alias{DataImporterConfiguration}
\title{DataImporterConfiguration}
\description{
Configuration of data import from excel or csv files. To be used with #TODO
}
\section{Super classes}{
\code{\link[ospsuite:Printable]{ospsuite::Printable}} -> \code{\link[ospsuite:DotNetWrapper]{ospsuite::DotNetWrapper}} -> \code{DataImporterConfiguration}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{timeColumn}}{Name of the column for time values}

\item{\code{timeUnit}}{If \code{timeUnitFromColumn} is \code{FALSE}, unit of the values in time column
If \code{timeUnitFromColumn} is \code{TRUE}, name of the column with units of the values in time column}

\item{\code{timeUnitFromColumn}}{If \code{TRUE}, units of the values in time column
are defined in the column \code{timeUnit}. If \code{FALSE}, the unit is defined by
\code{timeUnit}.}

\item{\code{measurementColumn}}{Name of the column for measurement values}

\item{\code{measurementDimension}}{If \code{measurementUnitFromColumn} is \code{FALSE}, dimension of the values in measurement column
If \code{measurementUnitFromColumn} is \code{TRUE}, the dimension is guessed from the unit defined in the column \code{measurementUnit} during import process and \verb{$measurementDimension} is \code{NULL}.
When changing dimension, the unit is set to the base unit of this dimension.}

\item{\code{measurementUnit}}{If \code{measurementUnitFromColumn} is \code{FALSE}, unit of the values in measurement column
If \code{measurementUnitFromColumn} is \code{TRUE}, name of the column with units of the values in measurement column}

\item{\code{measurementUnitFromColumn}}{If \code{TRUE}, units of the values in measurement column
are defined in the column \code{measurementUnit}. If \code{FALSE}, the unit is defined by
\code{measurementUnit}.}

\item{\code{errorColumn}}{Name of the column for measurement error values
If no error column is defined, the value is \code{NULL}. Setting the value
to \code{NULL} removes an existing error column.}

\item{\code{errorUnit}}{If \code{measurementUnitFromColumn} is \code{FALSE}, unit of the values in the error column
If \code{measurementUnitFromColumn} is \code{TRUE}, name of the column with units of the values in error column
If no error column is present, the value is \code{NULL}}

\item{\code{errorType}}{Type of the measurement error values. See enum \code{DataErrorType}
for possible values
If no error column is present, the value is \code{NULL}}

\item{\code{groupingColumns}}{Column names by which the data will be grouped}

\item{\code{sheets}}{Names of the sheets (list of strings) of the excel workbook for which the
configuration will be applied.}

\item{\code{namingPattern}}{Regular expression used for naming of loaded data sets.
Words between curly brackets (e.g. \code{{Group Id}}) will be replaced by the value
in the corresponding column. Further keywords are \code{{Source}} for the file name
and \code{{Sheet}} for sheet name.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DataImporterConfiguration$new()}}
\item \href{#method-saveConfiguration}{\code{DataImporterConfiguration$saveConfiguration()}}
\item \href{#method-addGroupingColumn}{\code{DataImporterConfiguration$addGroupingColumn()}}
\item \href{#method-removeGroupingColumn}{\code{DataImporterConfiguration$removeGroupingColumn()}}
\item \href{#method-print}{\code{DataImporterConfiguration$print()}}
\item \href{#method-clone}{\code{DataImporterConfiguration$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ospsuite" data-topic="DotNetWrapper" data-id="finalize">}\href{../../ospsuite/html/DotNetWrapper.html#method-finalize}{\code{ospsuite::DotNetWrapper$finalize()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$new(configurationFilePath = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{configurationFilePath}}{Path to the XML file with stored configuration
(e.g. create in PK-Sim or MoBi).
If \code{NULL} (default), an empty configuration with columns "Time" and
"Measurement" is created.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{DataImporterConfiguration} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-saveConfiguration"></a>}}
\if{latex}{\out{\hypertarget{method-saveConfiguration}{}}}
\subsection{Method \code{saveConfiguration()}}{
Save configuration to a XML file that can be used in PKSim/MoBi
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$saveConfiguration(filePath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{Path (incl. file name) to the location where the configuration
will be exported to.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addGroupingColumn"></a>}}
\if{latex}{\out{\hypertarget{method-addGroupingColumn}{}}}
\subsection{Method \code{addGroupingColumn()}}{
Add a column for grouping the data sets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$addGroupingColumn(column)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{column}}{Name of the column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeGroupingColumn"></a>}}
\if{latex}{\out{\hypertarget{method-removeGroupingColumn}{}}}
\subsection{Method \code{removeGroupingColumn()}}{
Remove a column for grouping the data sets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$removeGroupingColumn(column)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{column}}{Name of the column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print the object to the console
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Rest arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataImporterConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
