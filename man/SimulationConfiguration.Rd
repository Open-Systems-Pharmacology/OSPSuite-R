% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimulationConfiguration.R
\docType{class}
\name{SimulationConfiguration}
\alias{SimulationConfiguration}
\title{Simulation configuration}
\value{
A new \code{SimulationConfiguration} object.
}
\description{
Configuration of a simulation. Contains description of the modules used for
the simulation, selected Parameter Values (PV) and Initial Conditions (IC), and molecule calculation methods.
}
\section{Super classes}{
\code{\link[rSharp:NetObject]{rSharp::NetObject}} -> \code{\link[ospsuite:DotNetWrapper]{ospsuite::DotNetWrapper}} -> \code{\link[ospsuite:ObjectBase]{ospsuite::ObjectBase}} -> \code{SimulationConfiguration}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{individual}}{A building block of type "Individual" used in the configuration.
Can be \code{NULL} if no Individual should be applied.}

\item{\code{expressionProfiles}}{A list of building blocks of type "Expression Profile"
used in the configuration. Only one profile per protein is allowed.}

\item{\code{modules}}{A named list of \code{Module} objects from which to create in simulation.
The order of modules defines the order in which the modules will be combined to a simulation!
When setting the modules, the selection of Initial Conditions and Parameter Values
is reset to the first available ones in the modules.}

\item{\code{selectedInitialConditions}}{A named list with names being the names of the modules,
and the values the names of Initial Conditions Building Blocks}

\item{\code{selectedParameterValues}}{A named list with names being the names of the modules,
and the values the names of Parameter Values Building Blocks
If the modules for which the PV
selection is provided are not in the configuration, throw an error.}

\item{\code{partitionCoefficientMethods}}{The method used for calculation of partition coefficients. A named list with names being the molecules used in all modules,
and the values being one of the \code{PartitionCoefficientMethods} enum values.
To set the partition coefficient method for a molecule, provide a named list.}

\item{\code{cellularPermeabilityMethods}}{The method used for calculation of cellular permeabilities. A named list with names being the molecules used in all modules,
and the values being one of the \code{CellularPermeabilityMethods} enum values.
To set the cellular permeability method for a molecule, provide a named list.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SimulationConfiguration-new}{\code{SimulationConfiguration$new()}}
\item \href{#method-SimulationConfiguration-print}{\code{SimulationConfiguration$print()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id=".printClass"><a href='../../rSharp/html/NetObject.html#method-NetObject-.printClass'><code>rSharp::NetObject$.printClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id=".printLine"><a href='../../rSharp/html/NetObject.html#method-NetObject-.printLine'><code>rSharp::NetObject$.printLine()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="call"><a href='../../rSharp/html/NetObject.html#method-NetObject-call'><code>rSharp::NetObject$call()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="get"><a href='../../rSharp/html/NetObject.html#method-NetObject-get'><code>rSharp::NetObject$get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getFields"><a href='../../rSharp/html/NetObject.html#method-NetObject-getFields'><code>rSharp::NetObject$getFields()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getMemberSignature"><a href='../../rSharp/html/NetObject.html#method-NetObject-getMemberSignature'><code>rSharp::NetObject$getMemberSignature()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getMethods"><a href='../../rSharp/html/NetObject.html#method-NetObject-getMethods'><code>rSharp::NetObject$getMethods()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getProperties"><a href='../../rSharp/html/NetObject.html#method-NetObject-getProperties'><code>rSharp::NetObject$getProperties()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getStaticFields"><a href='../../rSharp/html/NetObject.html#method-NetObject-getStaticFields'><code>rSharp::NetObject$getStaticFields()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getStaticMethods"><a href='../../rSharp/html/NetObject.html#method-NetObject-getStaticMethods'><code>rSharp::NetObject$getStaticMethods()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="getStaticProperties"><a href='../../rSharp/html/NetObject.html#method-NetObject-getStaticProperties'><code>rSharp::NetObject$getStaticProperties()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rSharp" data-topic="NetObject" data-id="set"><a href='../../rSharp/html/NetObject.html#method-NetObject-set'><code>rSharp::NetObject$set()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationConfiguration-new"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationConfiguration-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new instance of the class

Should not be directly used. Instead, use function \code{createSimulationConfiguration()} or the method \code{createSimulationConfiguration()}
from the class \code{MoBiProject}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationConfiguration$new(netObject)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{netObject}}{Reference to \code{NetObject} .NET Simulation configuration object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationConfiguration-print"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationConfiguration-print}{}}}
\subsection{Method \code{print()}}{
Print the object to the console
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationConfiguration$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Rest arguments.}
}
\if{html}{\out{</div>}}
}
}
}
