% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/default-plot-configuration.R
\name{DefaultPlotConfiguration}
\alias{DefaultPlotConfiguration}
\title{Plot configuration for OSP plots}
\description{
R6 configuration class defining aesthetic properties of plots that can be
created with \code{plotIndividualTimeProfile()}, \code{plotPopulationTimeProfile()},
\code{plotObservedVsSimulated()}, and \code{plotResidualsVsTime()}.

To interactively explore various aesthetic properties and appearance of plots
with these properties, you can use the \href{https://www.open-systems-pharmacology.org/TLF-Library/articles/theme-maker.html}{Shiny app} from \code{{tlf}} package.

The following sections provide more details on how to customize it further.
}
\section{Specifying aesthetic properties}{
Aesthetic mappings describe how groups are mapped to visual properties
(color, shape, size, etc.) of the geometries included in the plot (e.g.
point, line, ribbon, etc.).

The supported values for each property can be seen using \code{{tlf}} lists:
\itemize{
\item color, fill: \code{tlf::ColorMaps}
\item shape: \code{tlf::Shapes}
\item legend position: \code{tlf::LegendPositions}
\item alignments: \code{tlf::Alignments}
\item linetype: \code{tlf::Linetypes}
}

For example, all parameters related to color (\code{titleColor},
\code{yAxisLabelTicksColor}, etc.) accept any of the palettes available in
\code{tlf::ColorMaps} (e.g. \code{tlf::ColorMaps$ospDefault}).

Note that these are named lists, and, therefore, if you want to assign a
specific element from a list to an object's public field, you will have to
extract that element first.

For example, if you want to specify that the
legend position should be outside the plot to the left and at bottom, you
will have to do the following:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{myPlotConfiguration <- DefaultPlotConfiguration$new()
myPlotConfiguration$legendPosition <- tlf::LegendPositions$outsideBottomLeft
}\if{html}{\out{</div>}}

Of course, the extracted element doesn't have to be a single value, and can
also be an atomic vector. For example, if you want to assign a different line
type to each group in a profile plot, you will have to assign a vector of
line types.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{myPlotConfiguration <- DefaultPlotConfiguration$new()
myPlotConfiguration$linesLinetype <- names(tlf::Linetypes)
}\if{html}{\out{</div>}}

If there are more number of elements in the vector than the number of groups,
the additional elements will be ignored.
}

\section{Specifying units}{
The available units for \code{x}-and \code{y}-axes depend on the dimensions of these
quantities (\code{ospsuite::ospDimensions}). Supported units can be seen with
\code{ospsuite::ospUnits}.
}

\section{Specifying fonts}{
A font is a particular set of glyphs (character shapes), differentiated from
other fonts in the same family by additional properties such as stroke
weight, slant, relative width, etc.

A font face (aka typeface) is the design of lettering, characterized by
variations in size, weight (e.g. bold), slope (e.g. italic), width (e.g.
condensed), and so on. The available font faces can seen using
\code{tlf::FontFaces} list.

A font family is a grouping of fonts defined by shared design styles.

The available font families will depend on which fonts have been installed on
your computer. This information can be extracted by running the following
code:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# install.packages("systemfonts")
library(systemfonts)
system_fonts()
}\if{html}{\out{</div>}}
}

\section{Specifying scaling}{
Transformations for both x- and y-axes can be (independently) specified. The
default is linear for both axes.

The available transformations can be seen in the \code{tlf::Scaling} list.
}

\section{Specifying tick labels}{
\code{tlf::TickLabelTransforms} lists of all available tick label transformations.
For example, selecting \code{tlf::TickLabelTransforms$identity} will display tick
labels as they are, while selecting \code{tlf::TickLabelTransforms$log} will
display tick labels in logarithmic scale format.
}

\section{Saving plot}{
By default, the plots will be shown in plot pane of your IDE, but the plots
can also be saved to a file using the \code{ggplot2::ggsave()} function.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{myPlot <- plotIndividualTimeProfile(myDataComb, myPC)
ggplot2::ggsave(filename = "plot_1.png", plot = myPlot)
}\if{html}{\out{</div>}}
}

\examples{

# Create a new instance of this class
myPlotConfiguration <- DefaultPlotConfiguration$new()

# Change defaults
myPlotConfiguration$title <- "My Plot Title"
myPlotConfiguration$pointsSize <- 2.5
myPlotConfiguration$legendTitle <- "My Legend Title"

# Checking new values
myPlotConfiguration$pointsSize

# To check all default values, you can print the object
myPlotConfiguration

}
\seealso{
Other plotting: 
\code{\link{plotIndividualTimeProfile}()},
\code{\link{plotObservedVsSimulated}()},
\code{\link{plotPopulationTimeProfile}()},
\code{\link{plotResidualsVsSimulated}()},
\code{\link{plotResidualsVsTime}()}
}
\concept{plotting}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{xUnit, yUnit}}{Units for quantities plotted on x- and y-axes, respectively.}

\item{\code{title, subtitle, caption, xLabel, yLabel, legendTitle, watermark}}{A character
string providing plot annotations for plot title, subtitle, caption, x-axis
label, y-axis label, plot legend, watermark, respectively.}

\item{\code{titleColor, titleSize, titleFontFace, titleFontFamily, titleAngle, titleAlign}}{Aesthetic properties for the plot title.}

\item{\code{subtitleColor, subtitleSize, subtitleFontFace, subtitleFontFamily, subtitleAngle, subtitleAlign}}{Aesthetic properties for the plot subtitle.}

\item{\code{captionColor, captionSize, captionFontFace, captionFontFamily, captionAngle, captionAlign}}{Aesthetic properties for the plot caption.}

\item{\code{xLabelColor, xLabelSize, xLabelFontFace, xLabelFontFamily, xLabelAngle, xLabelAlign}}{Aesthetic properties for the plot xLabel.}

\item{\code{yLabelColor, yLabelSize, yLabelFontFace, yLabelFontFamily, yLabelAngle, yLabelAlign}}{Aesthetic properties for the plot yLabel.}

\item{\code{legendPosition}}{A character string defining the legend position.
Available options can be seen using \code{tlf::LegendPositions} list.}

\item{\code{legendTitleSize, legendTitleColor, legendTitleFontFamily, legendTitleFontFace, legendTitleAngle, legendTitleAlign}}{Aesthetic properties for the legend title.}

\item{\code{legendKeysSize, legendKeysColor, legendKeysFontFamily, legendKeysFontFace, legendKeysAngle, legendKeysAlign}}{Aesthetic properties for the legend caption.}

\item{\code{xAxisTicksLabels, xAxisLabelTicksSize, xAxisLabelTicksColor, xAxisLabelTicksFontFamily, xAxisLabelTicksFontFace, xAxisLabelTicksAngle, xAxisLabelTicksAlign, xAxisExpand}}{Aesthetic properties for the x-axis label.}

\item{\code{yAxisTicksLabels, yAxisLabelTicksSize, yAxisLabelTicksColor, yAxisLabelTicksFontFamily, yAxisLabelTicksFontFace, yAxisLabelTicksAngle, yAxisLabelTicksAlign, yAxisExpand}}{Aesthetic properties for the y-axis label.}

\item{\code{xAxisLimits, yAxisLimits}}{A numeric vector of axis limits for the x-and
y-axis, respectively.}

\item{\code{xAxisTicks, yAxisTicks}}{A numeric vector or a function defining where to
position x-and y-axis ticks, respectively.}

\item{\code{xAxisScale, yAxisScale}}{A character string defining axis scale.
Available options can be seen using \code{tlf::Scaling} list.}

\item{\code{watermarkSize, watermarkColor, watermarkFontFamily, watermarkFontFace, watermarkAngle, watermarkAlign}}{A character string specifying the aesthetic properties for the watermark.}

\item{\code{plotBackgroundFill, plotBackgroundColor, plotBackgroundSize, plotBackgroundLinetype}}{A character string specifying the aesthetic properties for the plot background.}

\item{\code{plotPanelBackgroundFill, plotPanelBackgroundColor, plotPanelBackgroundSize, plotPanelBackgroundLinetype}}{A character string specifying the aesthetic properties for the plot panel (inside of plot) background.}

\item{\code{xAxisColor, xAxisSize, xAxisLinetype}}{A character string specifying the aesthetic properties for the x-axis.}

\item{\code{yAxisColor, yAxisSize, yAxisLinetype}}{A character string specifying the aesthetic properties for the y-axis.}

\item{\code{xGridColor, xGridSize, xGridLinetype}}{A character string specifying the aesthetic properties for the x-axis grid.}

\item{\code{yGridColor, yGridSize, yGridLinetype}}{A character string specifying the aesthetic properties for the y-axis grid.}

\item{\code{linesColor, linesSize, linesLinetype, linesAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for lines.}

\item{\code{pointsColor, pointsShape, pointsSize, pointsAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for points.}

\item{\code{ribbonsFill, ribbonsSize, ribbonsLinetype, ribbonsAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for ribbons.}

\item{\code{errorbarsSize, errorbarsLinetype, errorbarsAlpha, errorbarsCapSize}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, cap width/height, respectively, for error bars.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{xUnit, yUnit}}{Units for quantities plotted on x- and y-axes, respectively.}

\item{\code{title, subtitle, caption, xLabel, yLabel, legendTitle, watermark}}{A character
string providing plot annotations for plot title, subtitle, caption, x-axis
label, y-axis label, plot legend, watermark, respectively.}

\item{\code{titleColor, titleSize, titleFontFace, titleFontFamily, titleAngle, titleAlign}}{Aesthetic properties for the plot title.}

\item{\code{subtitleColor, subtitleSize, subtitleFontFace, subtitleFontFamily, subtitleAngle, subtitleAlign}}{Aesthetic properties for the plot subtitle.}

\item{\code{captionColor, captionSize, captionFontFace, captionFontFamily, captionAngle, captionAlign}}{Aesthetic properties for the plot caption.}

\item{\code{xLabelColor, xLabelSize, xLabelFontFace, xLabelFontFamily, xLabelAngle, xLabelAlign}}{Aesthetic properties for the plot xLabel.}

\item{\code{yLabelColor, yLabelSize, yLabelFontFace, yLabelFontFamily, yLabelAngle, yLabelAlign}}{Aesthetic properties for the plot yLabel.}

\item{\code{legendTitleSize, legendTitleColor, legendTitleFontFamily, legendTitleFontFace, legendTitleAngle, legendTitleAlign}}{Aesthetic properties for the legend title.}

\item{\code{legendKeysSize, legendKeysColor, legendKeysFontFamily, legendKeysFontFace, legendKeysAngle, legendKeysAlign}}{Aesthetic properties for the legend caption.}

\item{\code{xAxisTicksLabels, xAxisLabelTicksSize, xAxisLabelTicksColor, xAxisLabelTicksFontFamily, xAxisLabelTicksFontFace, xAxisLabelTicksAngle, xAxisLabelTicksAlign, xAxisExpand}}{Aesthetic properties for the x-axis label.}

\item{\code{yAxisTicksLabels, yAxisLabelTicksSize, yAxisLabelTicksColor, yAxisLabelTicksFontFamily, yAxisLabelTicksFontFace, yAxisLabelTicksAngle, yAxisLabelTicksAlign, yAxisExpand}}{Aesthetic properties for the y-axis label.}

\item{\code{xAxisLimits, yAxisLimits}}{A numeric vector of axis limits for the x-and
y-axis, respectively.}

\item{\code{xAxisTicks, yAxisTicks}}{A numeric vector or a function defining where to
position x-and y-axis ticks, respectively.}

\item{\code{xAxisScale, yAxisScale}}{A character string defining axis scale.
Available options can be seen using \code{tlf::Scaling} list.}

\item{\code{watermarkSize, watermarkColor, watermarkFontFamily, watermarkFontFace, watermarkAngle, watermarkAlign}}{A character string specifying the aesthetic properties for the watermark.}

\item{\code{plotBackgroundFill, plotBackgroundColor, plotBackgroundSize, plotBackgroundLinetype}}{A character string specifying the aesthetic properties for the plot background.}

\item{\code{plotPanelBackgroundFill, plotPanelBackgroundColor, plotPanelBackgroundSize, plotPanelBackgroundLinetype}}{A character string specifying the aesthetic properties for the plot panel (inside of plot) background.}

\item{\code{xAxisColor, xAxisSize, xAxisLinetype}}{A character string specifying the aesthetic properties for the x-axis.}

\item{\code{yAxisColor, yAxisSize, yAxisLinetype}}{A character string specifying the aesthetic properties for the y-axis.}

\item{\code{xGridColor, xGridSize, xGridLinetype}}{A character string specifying the aesthetic properties for the x-axis grid.}

\item{\code{yGridColor, yGridSize, yGridLinetype}}{A character string specifying the aesthetic properties for the y-axis grid.}

\item{\code{linesColor, linesSize, linesLinetype, linesAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for lines.}

\item{\code{pointsColor, pointsShape, pointsSize, pointsAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for points.}

\item{\code{ribbonsFill, ribbonsSize, ribbonsLinetype, ribbonsAlpha}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, respectively, for ribbons.}

\item{\code{errorbarsSize, errorbarsLinetype, errorbarsAlpha, errorbarsCapSize}}{A selection key or values for choice of color, fill, shape, size, linetype, alpha, cap width/height, respectively, for error bars.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DefaultPlotConfiguration-clone}{\code{DefaultPlotConfiguration$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultPlotConfiguration-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultPlotConfiguration-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DefaultPlotConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
