# History files
.Rhistory
.Rapp.history

deploy/

packages/

temp/

tests/playground/

# Session Data files
.RData

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
/*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# Shiny token, see https://shiny.rstudio.com/articles/shinyapps.html
rsconnect/

Meta

# Website output folder
docs
doc

# test artifacts
tests/testthat/*.pdf

# Files renamed during package load (on macos)
inst/lib/SQLite.Interop.dll.dylib
inst/lib/System.Data.SQLite.dll
inst/lib/libOSPSuite.FuncParserNative.dylib
inst/lib/libOSPSuite.SimModelNative.dylib
inst/lib/libOSPSuite.SimModelSolver_CVODES.dylib

# macOS SQLite fix files (created after applying VIEW->TABLE conversions)
inst/lib/PKSimDB.sqlite.macos-fixed
inst/lib/PKSimDB.sqlite.original

# macOS Development Setup
# ------------------------
# The package automatically fixes a SQLite compatibility issue on first load
# by modifying PKSimDB.sqlite. To prevent git from tracking these local changes,
# run this once after cloning the repository:
#
#   git update-index --skip-worktree inst/lib/PKSimDB.sqlite
#
# The fix is automatically re-applied when the database file's modification date
# is newer than the marker file (indicating a database update from CI).
#
# To temporarily check database status:
#   git update-index --no-skip-worktree inst/lib/PKSimDB.sqlite
#   git status inst/lib/PKSimDB.sqlite
#   git update-index --skip-worktree inst/lib/PKSimDB.sqlite

