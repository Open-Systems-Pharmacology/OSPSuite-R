on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name for the PR (default: update-core-files-YYYYMMDD)'
        required: false
        default: ''
        type: string
      pr_title:
        description: 'Title for the PR (default: 🤖 Update Core Files)'
        required: false
        default: '🤖 Update Core Files'
        type: string
      pr_body:
        description: 'Body for the PR (default: Auto-generated PR to update core files)'
        required: false
        default: 'Auto-generated PR to update core files from PK-Sim dependencies'
        type: string

name: Update Core Files

permissions: 
  contents: write
  pull-requests: write

jobs:
  update-core-files:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.CORE_FILES_UPDATE_PAT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CORE_FILES_UPDATE_PAT }}
          fetch-depth: 0

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Generate branch name
        id: branch_name
        run: |
          if [ -n "${{ github.event.inputs.branch_name }}" ]; then
            echo "name=${{ github.event.inputs.branch_name }}" >> $GITHUB_OUTPUT
          else
            echo "name=update-core-files-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          fi

      - name: Create and checkout new branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b ${{ steps.branch_name.outputs.name }}

      - name: Download and unzip core files
        run: |
          echo "Starting core files update..."
          if ! source("update_core_files.R"); then
            echo "Error: Failed to update core files"
            exit 1
          fi
          echo "Core files update completed successfully"
        shell: Rscript {0}

      - name: Check if there are changes
        id: changes
        run: |
          if git diff --quiet inst/lib; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in core files"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in core files"
          fi

      - name: Commit changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git add inst/lib
          git commit -m "🤖 Update Core Files

          - Updated PK-Sim R dependencies
          - Generated on: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          - Triggered by: ${{ github.actor }}"

      - name: Push branch
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git push origin ${{ steps.branch_name.outputs.name }}

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '${{ github.event.inputs.pr_title || "🤖 Update Core Files" }}',
              head: '${{ steps.branch_name.outputs.name }}',
              base: 'main',
              body: `${{ github.event.inputs.pr_body || "Auto-generated PR to update core files from PK-Sim dependencies" }}

              ## Changes
              - Updated PK-Sim R dependencies in \`inst/lib\`
              - Generated on: ${new Date().toISOString()}
              - Triggered by: ${{ github.actor }}

              ## What this PR does
              This PR updates the core files (shared libraries) required by the \`{ospsuite}\` package to access PK-Sim functionality. The files are downloaded from the latest PK-Sim build artifacts.
            });
            
            console.log(`Created PR #${pr.number}: ${pr.html_url}`);

      - name: Comment on existing PR (if triggered from PR)
        if: github.event_name == 'workflow_call' && github.event.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const existingComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🤖 Update Core Files')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: `🤖 Update Core Files completed successfully!

                - Updated PK-Sim R dependencies in \`inst/lib\`
                - Generated on: ${new Date().toISOString()}
                - Triggered by: ${{ github.actor }}`
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `🤖 Update Core Files completed successfully!

                - Updated PK-Sim R dependencies in \`inst/lib\`
                - Generated on: ${new Date().toISOString()}
                - Triggered by: ${{ github.actor }}`
              });
            }

      - name: No changes message
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "No changes detected in core files. Nothing to commit or create PR for."
